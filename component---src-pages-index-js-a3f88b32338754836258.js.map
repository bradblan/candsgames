{"version":3,"sources":["webpack:///./src/components/cardtext.js","webpack:///./src/components/card.js","webpack:///./src/pages/fragments/index-fragment.js","webpack:///./src/pages/index.js","webpack:///./src/components/cornholegames.js"],"names":["CardText","keyText","query","render","data","content","allMarkdownRemark","edges","find","edge","node","frontmatter","key","dangerouslySetInnerHTML","__html","excerpt","className","Card","cardId","allGalleryJson","id","class","to","fluid","src","childImageSharp","alt","title","FragIndex","_","require","Home","items","sampleSize","imgName","altText","map","CornholeGamesImage","useStaticQuery","placeholderImage","fixed"],"mappings":"6IAuCeA,EAnCE,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACf,wBAAC,cAAD,CACEC,MAAK,aAeLC,OAAQ,SAAAC,GACN,IAAMC,EAAUD,EAAKE,kBAAkBC,MAAMC,MAC3C,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,MAAQX,KAExC,OACE,6BACEY,wBAAyB,CAAEC,OAAQT,EAAQK,KAAKK,SAChDC,UAAU,kBC0CLC,IAhEF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACX,wBAAC,cAAD,CACEhB,MAAK,YAuBLC,OAAQ,SAAAC,GACN,IAAMC,EAAUD,EAAKe,eAAeZ,MAAMC,MACxC,SAAAC,GAAI,OAAIA,EAAKC,KAAKU,KAAOF,KAE3B,OAAKb,EAIH,+BAAKgB,MAAM,QACT,+BAAKA,MAAM,kBACT,+BAAKA,MAAM,aACT,wBAAC,OAAD,CAAMC,GAAG,aACP,wBAAC,IAAD,CACEC,MAAOlB,EAAQK,KAAKc,IAAIC,gBAAgBF,MACxCG,IAAKrB,EAAQK,KAAKgB,QAIxB,+BAAKL,MAAM,SACT,+BAAKA,MAAM,aACT,8BAAIA,MAAM,cACR,wBAAC,OAAD,CAAMC,GAAG,YAAYN,UAAU,cAC5BX,EAAQK,KAAKiB,QAGlB,wBAAC,EAAD,CAAU1B,QAASI,EAAQK,KAAKE,UApBjC,+BAAKS,MAAM,cAAX,mB,uLCLAO,EA5BG,kBAChB,gDACE,4DACA,iCACE,wBAAC,IAAD,MADF,oUAQA,mVAOA,iCACE,8EADF,gP,YCXEC,EAAIC,EAAQ,QAEH,SAASC,EAAT,GAAyB,IAAT3B,EAAQ,EAARA,KACvB4B,EAAQH,EAAEI,WAAW7B,EAAKe,eAAeZ,MAAO,IACtD,OACE,wBAAC,IAAD,CAAQ2B,QAAQ,kBAAkBC,QAAQ,8BACxC,wBAAC,IAAD,CAAKR,MAAM,SACX,+BAAKN,MAAM,mBACT,+BAAKA,MAAM,OACT,+BAAKA,MAAM,aACT,wBAAC,EAAD,OAEF,+BAAKA,MAAM,aACT,wBAAC,IAAD,QAGJ,+BAAKA,MAAM,OACT,+BAAKA,MAAM,OACT,+BAAKA,MAAM,sDACRW,EAAMI,KAAI,YAAe,IAChBhB,EADe,EAAXV,KACJU,GACR,OAAO,wBAAC,IAAD,CAAMF,OAAQE,YAU9B,IAAMlB,EAAK,c,kCCzClB,iDA8BemC,IA1BY,WAAO,IAAD,IACzBjC,EAAOkC,yBAAe,cAY5B,OAAKlC,SAAD,UAACA,EAAMmC,wBAAP,iBAAC,EAAwBd,uBAAzB,aAAC,EAAyCe,OAK5C,wBAAC,IAAD,CACEA,MAAOpC,EAAKmC,iBAAiBd,gBAAgBe,MAC7CxB,UAAU,0BACVU,IAAI,qBAPC","file":"component---src-pages-index-js-a3f88b32338754836258.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst CardText = ({ keyText }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allMarkdownRemark {\r\n          edges {\r\n            node {\r\n              excerpt(format: HTML, pruneLength: 150)\r\n              html\r\n              frontmatter {\r\n                key\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const content = data.allMarkdownRemark.edges.find(\r\n        edge => edge.node.frontmatter.key === keyText\r\n      )\r\n      return (\r\n        <p\r\n          dangerouslySetInnerHTML={{ __html: content.node.excerpt }}\r\n          className=\"card-text\"\r\n        />\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nCardText.propTypes = {\r\n  keyText: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default CardText\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport PropTypes from \"prop-types\"\r\nimport CardText from \"./cardtext\"\r\n\r\nconst Card = ({ cardId }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allGalleryJson(filter: { card: { eq: \"true\" } }) {\r\n          edges {\r\n            node {\r\n              id\r\n              key\r\n              title\r\n              alt\r\n              name\r\n              src {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 125) {\r\n                    ...GatsbyImageSharpFluid\r\n                    ...GatsbyImageSharpFluidLimitPresentationSize\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const content = data.allGalleryJson.edges.find(\r\n        edge => edge.node.id === cardId\r\n      )\r\n      if (!content) {\r\n        return <div class=\"no-content\">No Content</div>\r\n      }\r\n      return (\r\n        <div class=\"card\">\r\n          <div class=\"row no-gutters\">\r\n            <div class=\"col-3 p-3\">\r\n              <Link to=\"/products\">\r\n                <Img\r\n                  fluid={content.node.src.childImageSharp.fluid}\r\n                  alt={content.node.alt}\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div class=\"col-9\">\r\n              <div class=\"card-body\">\r\n                <h4 class=\"card-title\">\r\n                  <Link to=\"/products\" className=\"text-white\">\r\n                    {content.node.title}\r\n                  </Link>\r\n                </h4>\r\n                <CardText keyText={content.node.key} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nCard.propTypes = {\r\n  cardId: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\"\r\nimport CornholeGamesImage from \"../../components/cornholegames\"\r\n\r\nconst FragIndex = () => (\r\n  <>\r\n    <h1>Welcome To C &amp; S Games</h1>\r\n    <p>\r\n      <CornholeGamesImage />\r\n      We are proud to produce high quality custom-made Cornhole games and\r\n      accessories in Bowling Green, KY. Our full-size Cornhole games are made to\r\n      American Cornhole Association regulations, using only quality 1/2\" plywood\r\n      on a 2\" x 4\" frame. Each finished game is stained and coated with\r\n      Polyurethane for maximum durability.\r\n    </p>\r\n    <p>\r\n      Each Cornhole game set you purchase is custom-made at our in-house\r\n      facilities. We hand select each piece of wood that goes into our games and\r\n      custom inspect every unit before it goes out to you. Our regulation duck\r\n      cloth bags are produced and sewn here as well. No product ships without\r\n      our inspection!\r\n    </p>\r\n    <p>\r\n      <strong>Junior Cornhole games now available!</strong> Let the little ones\r\n      enjoy the outdoors and play along side you with their own custom-made\r\n      junior Cornhole game. These games are perfect for teachers and\r\n      after-school programs as well. Children will have hours of fun playing\r\n      Cornhole!\r\n    </p>\r\n  </>\r\n)\r\n\r\nexport default FragIndex\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport SEO from \"../components/seo\"\r\nimport Layout from \"../components/layout\"\r\nimport Card from \"../components/card\"\r\n\r\nimport FragIndex from \"./fragments/index-fragment\"\r\nimport QuoteForm from \"../components/quoteform\"\r\n\r\nconst _ = require(\"lodash\")\r\n\r\nexport default function Home({ data }) {\r\n  const items = _.sampleSize(data.allGalleryJson.edges, 10)\r\n  return (\r\n    <Layout imgName=\"banner_home.jpg\" altText=\"As heard on 104.5 The Zone\">\r\n      <SEO title=\"Home\" />\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col col-8\">\r\n            <FragIndex />\r\n          </div>\r\n          <div class=\"col col-4\">\r\n            <QuoteForm />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"csg-card-deck-scrollable flex-nowrap overflow-auto\">\r\n              {items.map(({ node }) => {\r\n                const { id } = node\r\n                return <Card cardId={id} />\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allGalleryJson(filter: { card: { eq: \"true\" } }) {\r\n      edges {\r\n        node {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst CornholeGamesImage = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"cornhole_games.jpg\" }) {\r\n        childImageSharp {\r\n          fixed(width: 300) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fixed) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return (\r\n    <Img\r\n      fixed={data.placeholderImage.childImageSharp.fixed}\r\n      className=\"float-right image-fluid\"\r\n      alt=\"Cornhole Charlie\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default CornholeGamesImage\r\n"],"sourceRoot":""}